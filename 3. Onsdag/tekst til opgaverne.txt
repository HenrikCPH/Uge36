1)
Vi fandt en keep-alive i vores http header
Keep-alive header holder forbindelsen oppe hele tiden.

2)
Jeg frå redirect og r.html. redirects header er keep-alive og det samme med r.html.
Det sker ved goGet metoden.

3)
Den starter ved http og redirecter dig https.
Den forstår du skriver http, men sender dig til https.
4a) code 500
java.lang.ArithmeticException: / by zero
	Ups.processRequest(Ups.java:34)
	Ups.doGet(Ups.java:62)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
Vi får 500 fordi der er fejl i koden og den ikke kan dividere med 0 som er en server error.

4b) code 404
Vi får 404 fordi prøver en path som vi ikke har oprettet en servlet til som er en client error.

6)

http://localhost:8080/onsdag02/e6.html#/action_page.php
http://localhost:8080/onsdag02/e6.html?hidden=12345678&fname=John&lname=Doe#/action_page.php

Getter viser det hele og post gemmer de ting du har hidden.

Responses are grouped in five classes:
Informational responses ( 100 – 199 ),
Successful responses ( 200 – 299 ),
Redirects ( 300 – 399 ),
Client errors ( 400 – 499 ),
and Server errors ( 500 – 599 ).

7b)
Servlet SessionDemo at /ex78
f)
Sessionscope - der hentes et navn på sessionscopet, og hvis ikke der er et navn, laves et.

8g)
Cookies har en leve tid, den cookie vi har lavet lever i et år.
if (name != null) {
            Cookie cookie = new Cookie("username", name);
            cookie.setMaxAge(60 * 60 * 24 * 365);
            response.addCookie(cookie);
        }
        Cookie[] cookies = request.getCookies();
        if (cookies != null) {
            for (Cookie cookie : request.getCookies()) {
                if (cookie.getName().equals("username")) {
                    name = cookie.getValue();
                }
denne del af kode, sætter leve tiden.
 